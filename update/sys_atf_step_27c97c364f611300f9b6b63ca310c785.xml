<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_atf_step">
    <sys_atf_step action="INSERT_OR_UPDATE">
        <active>true</active>
        <description>Run Server Side Validation Script</description>
        <display_name>Run Server Side Script</display_name>
        <inputs/>
        <order>1</order>
        <step_config display_value="Run Server Side Script">41de4a935332120028bc29cac2dc349a</step_config>
        <sys_class_name>sys_atf_step</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-04-22 05:18:36</sys_created_on>
        <sys_id>27c97c364f611300f9b6b63ca310c785</sys_id>
        <sys_mod_count>21</sys_mod_count>
        <sys_name>Run Server Side Script</sys_name>
        <sys_package display_value="FoodOrder" source="x_156372_foodorder">55ff0f044f211300f9b6b63ca310c7e0</sys_package>
        <sys_policy/>
        <sys_scope display_value="FoodOrder">55ff0f044f211300f9b6b63ca310c7e0</sys_scope>
        <sys_update_name>sys_atf_step_27c97c364f611300f9b6b63ca310c785</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-04-24 18:00:36</sys_updated_on>
        <table/>
        <test display_value="FoodOrderItemUnitTest">69a97c364f611300f9b6b63ca310c729</test>
        <timeout/>
    </sys_atf_step>
    <sys_variable_value action="delete_multiple" query="document_key=27c97c364f611300f9b6b63ca310c785"/>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_atf_step</document>
        <document_key>27c97c364f611300f9b6b63ca310c785</document_key>
        <order>100</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-04-22 05:18:36</sys_created_on>
        <sys_id>7b9a30764f611300f9b6b63ca310c795</sys_id>
        <sys_mod_count>21</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-04-24 18:00:36</sys_updated_on>
        <value>(function(outputs, steps, stepResult, assertEqual) {&#13;
	&#13;
	var insertNewOrder = function () {&#13;
		var grO = new GlideRecord('x_156372_foodorder_order');&#13;
		grO.initialize();&#13;
		return grO.insert();&#13;
	};&#13;
	&#13;
	var insertNewItem = function (foodOrderSysId) {&#13;
		var grI = new GlideRecord('x_156372_foodorder_order_item');&#13;
		grI.initialize();&#13;
		grI.order = foodOrderSysId;&#13;
		grI.insert();&#13;
	};&#13;
	&#13;
	var insertNewItemWithPrice = function (foodOrderSysId, price) {&#13;
		var grI = new GlideRecord('x_156372_foodorder_order_item');&#13;
		grI.initialize();&#13;
		grI.order = foodOrderSysId;&#13;
		grI.price = price;&#13;
		grI.insert();&#13;
	};&#13;
	&#13;
	describe('OrderItem', function () {&#13;
		var foodOrderUtil;&#13;
		var insertedFoodOrderSysId;&#13;
		var grFO;&#13;
		&#13;
		beforeEach(function(){&#13;
			insertedFoodOrderSysId = insertNewOrder();&#13;
			grFO  = new GlideRecord('x_156372_foodorder_order');&#13;
			grFO.get(insertedFoodOrderSysId);&#13;
			&#13;
			foodOrderUtil = new FoordOrderUtils(grFO);&#13;
		});&#13;
		&#13;
		it('should order creator be in power to remove Item from Order', function () {&#13;
			&#13;
			/* TODO&#13;
			insertNewItemWithPrice(insertedFoodOrderSysId, testedPrice );&#13;
			&#13;
			foodOrderUtil.calculateTotalCostWithoutDelivery();&#13;
			&#13;
			expect(parseFloat(grFO.getValue('total_cost_without_delivery'))).toEqual(testedPrice);*/&#13;
		});&#13;
	});&#13;
	&#13;
})(outputs, steps, stepResult, assertEqual);&#13;
jasmine.getEnv().execute();&#13;
</value>
        <variable display_value="">989d9e235324220002c6435723dc3484</variable>
    </sys_variable_value>
</record_update>
